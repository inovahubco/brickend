{# db_template.j2

   Generates `app/database.py` with SQLAlchemy engine, SessionLocal y Base.
   Usa StaticPool autom√°ticamente cuando la URL es ":memory:".
#}

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, declarative_base
{% set db_url = database_url if database_url and database_url.strip() else "sqlite:///:memory:" %}
from sqlalchemy.pool import StaticPool

SQLALCHEMY_DATABASE_URL = "{{ db_url }}"

engine = create_engine(
    SQLALCHEMY_DATABASE_URL,
    connect_args={"check_same_thread": False},
    poolclass=StaticPool,
)

SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
Base = declarative_base()

def get_db():
    """
    Dependency for FastAPI endpoints: yields a database session.
    """
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()
